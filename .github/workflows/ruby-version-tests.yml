# Convenience workflow for running the test suite against every supported ruby version
name: ruby-version-tests
on:
  workflow_dispatch:
jobs:
  build-ruby-version-tests:
    name: Build and upload test binaries
    env:
      RUST_BACKTRACE: 1
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
        - linux
        include:
        - build: linux
          os: ubuntu-20.04
          target: x86_64-unknown-linux-gnu
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    - name: Install Rust toolchain target
      run: |
        rustup target add ${{ matrix.target }}
    - name: Prepare test binary for upload
      run: |
        test_binary_path=$(cargo test --release --locked --no-run --message-format=json 2>/dev/null | grep '"executable":' | tail -1 | jq '.executable' | tr -d '"')
        echo "Test binary path is $test_binary_path"
        cp $test_binary_path rbspy-test
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: rbspy-test
        path: rbspy-test

  ruby-version-tests:
    runs-on: ubuntu-20.04
    needs: [build-ruby-version-tests]
    strategy:
      fail-fast: false
      matrix:
        ruby_version: [
          2.1.9,
          2.2.10,
          2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.3.5, 2.3.6, 2.3.7, 2.3.8,
          2.4.0, 2.4.1, 2.4.2, 2.4.3, 2.4.4, 2.4.5, 2.4.6, 2.4.7, 2.4.9, 2.4.10,
          2.5.0, 2.5.1, 2.5.2, 2.5.3, 2.5.4, 2.5.5, 2.5.6, 2.5.7, 2.5.8, 2.5.9,
          2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.6.5, 2.6.6, 2.6.7, 2.6.8, 2.6.9,
          2.7.0, 2.7.1, 2.7.2, 2.7.3, 2.7.4, 2.7.5,
          3.0.0, 3.0.1, 3.0.2, 3.0.3,
          3.1.0
        ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    - name: Install Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby_version }}
    - uses: actions/download-artifact@v2
    - name: Run tests
      timeout-minutes: 5
      run: |
        set -euo pipefail

        echo "Ruby version is $(ruby -v)"

        # TODO: This is just to put rbspy-testdata in the right place. Is there a leaner way?
        cargo fetch

        chmod u+x ./rbspy-test/rbspy-test
        ./rbspy-test/rbspy-test
